{
	"description": "Clone a volume group. The clone volume group will be created on the same appliance as the source volume group.A clone of a volume group will result in a new volume group of __Clone__ type. The clone will belong to the same family as the source volume group.When the source of a clone operation is a either primary or clone volume group, * __source_id__ will be set to the identifier of the source volume group. * __source_time__ will be set to the time at which the clone will be created.When the source of a clone operation is a snapshot set, * __source_id__ will be set to the source_id of the source snapshot set. * __source_time__ will be set to the source_time of the source snapshot set.The clone volume group will inherit the value of the __is_write_order_consistent__ property from the source volume group. A clone of a snapshot set is modeled as a clone of the snapshot set's source, created at the same time instant as when the source snapshot set was created.",
	"input_method": "stdin",
	"supports_noop": false,
	"remote": true,
	"parameters":{
			"description":{
				"description": "Description for the clone volume group.If description is not specified, the description for the snapshot set will not be set.",
				"type":        "Optional[String]"
			},
			"id":{
				"description": "Unique identifier of the volume group.",
				"type":        "String"
			},
			"is_replication_destination":{
				"description": "A boolean flag to indicate whether the clone volume group is a destination of a replication session.This parameter defaults to false, if not specified.",
				"type":        "Optional[Boolean]",
				"default":     false
			},
			"name":{
				"description": "Unique name for the clone volume group.",
				"type":        "String"
			},
			"protection_policy_id":{
				"description": "Unique identifier of the protection policy you want to assign to the clone volume group.",
				"type":        "Optional[String]"
			}},

	"files": [
		"powerstore/lib/puppet/util/task_helper.rb",
		"powerstore/lib/puppet/transport/powerstore.rb",
		"powerstore/lib/puppet/transport/schema/powerstore.rb"
  ]

}
